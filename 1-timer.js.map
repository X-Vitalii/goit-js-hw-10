{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startButton = document.querySelector('.btn');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nconst input = document.querySelector('.dateInput');\n\nstartButton.addEventListener('click', onStartButtonClick);\n\nlet userSelectedDate;\nlet intervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0].getTime() < Date.now()) {\n      // window.alert('Please choose a date in the future');\n      iziToast.warning({\n        title: 'Caution',\n        message: 'Please choose a date in the future',\n      });\n      iziToast.error({\n        title: 'Error',\n        message: 'Illegal operation',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nlet fp1 = flatpickr('#datetime-picker', options);\n\nfunction onStartButtonClick() {\n  intervalId = setInterval(() => {\n    startButton.disabled = true;\n    input.disabled = true;\n    const diff = userSelectedDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n"],"names":["startButton","daysEl","hoursEl","minutesEl","secondsEl","input","onStartButtonClick","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAc,SAAS,cAAc,MAAM,EAC3CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAQ,SAAS,cAAc,YAAY,EAEjDL,EAAY,iBAAiB,QAASM,CAAkB,EAExD,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OAEpCC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,EACDA,EAAS,MAAM,CACb,MAAO,QACP,QAAS,mBACjB,CAAO,EACDX,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBO,EAAmBG,EAAc,CAAC,EAErC,CACH,EAEUE,EAAU,mBAAoBH,CAAO,EAE/C,SAASH,GAAqB,CAC5BE,EAAa,YAAY,IAAM,CAC7BR,EAAY,SAAW,GACvBK,EAAM,SAAW,GACjB,MAAMQ,EAAON,EAAmB,KAAK,IAAG,EAClC,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDZ,EAAO,YAAckB,EAAeL,CAAI,EACxCZ,EAAQ,YAAciB,EAAeJ,CAAK,EAC1CZ,EAAU,YAAcgB,EAAeH,CAAO,EAC9CZ,EAAU,YAAce,EAAeF,CAAO,EAC1CJ,EAAO,MACT,cAAcL,CAAU,EACxBH,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAEA,SAASa,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC"}